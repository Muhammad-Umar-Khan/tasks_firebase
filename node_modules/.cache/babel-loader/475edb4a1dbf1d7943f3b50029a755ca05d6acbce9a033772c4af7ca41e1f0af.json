{"ast":null,"code":"var _jsxFileName = \"/home/muhammad/work/React/task_firebase/src/components/NewTask/NewTask.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../../hooks/useHttp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewTask = props => {\n  _s();\n  const config = {\n    url: \"https://react-tasks-e104d-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json\",\n    method: \"POST\",\n    body: JSON.stringify({\n      text: taskText\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const transformTasks = async data => {\n    const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = {\n      id: generatedId,\n      text: taskText\n    };\n    props.onAddTask(createdTask);\n  };\n  const {\n    isLoading,\n    error\n  } = useHttp(config, transformTasks);\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n\n  // const enterTaskHandler = async (taskText) => {\n  //   setIsLoading(true);\n  //   setError(null);\n  //   try {\n  //     const response = await fetch(\n  //       'https://react-tasks-e104d-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json',\n  //       {\n  //         method: 'POST',\n  //         body: JSON.stringify({ text: taskText }),\n  //         headers: {\n  //           'Content-Type': 'application/json',\n  //         },\n  //       }\n  //     );\n\n  //     if (!response.ok) {\n  //       throw new Error('Request failed!');\n  //     }\n\n  //     const data = await response.json();\n\n  //     const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n  //     const createdTask = { id: generatedId, text: taskText };\n\n  //     props.onAddTask(createdTask);\n  //   } catch (err) {\n  //     setError(err.message || 'Something went wrong!');\n  //   }\n  //   setIsLoading(false);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(NewTask, \"8BDe2N06L6WPtQbFtMEdxCMoO7U=\", false, function () {\n  return [useHttp];\n});\n_c = NewTask;\nexport default NewTask;\nvar _c;\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"names":["useState","Section","TaskForm","useHttp","NewTask","props","config","url","method","body","JSON","stringify","text","taskText","headers","transformTasks","data","generatedId","name","createdTask","id","onAddTask","isLoading","error","enterTaskHandler"],"sources":["/home/muhammad/work/React/task_firebase/src/components/NewTask/NewTask.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../../hooks/useHttp\";\n\nconst NewTask = (props) => {\n  const config = {\n    url: \"https://react-tasks-e104d-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json\",\n    method: \"POST\",\n    body: JSON.stringify({ text: taskText }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const transformTasks = async (data) => {\n    const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = { id: generatedId, text: taskText };\n\n    props.onAddTask(createdTask);\n  };\n  const { isLoading, error } = useHttp(config, transformTasks);\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n\n  // const enterTaskHandler = async (taskText) => {\n  //   setIsLoading(true);\n  //   setError(null);\n  //   try {\n  //     const response = await fetch(\n  //       'https://react-tasks-e104d-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json',\n  //       {\n  //         method: 'POST',\n  //         body: JSON.stringify({ text: taskText }),\n  //         headers: {\n  //           'Content-Type': 'application/json',\n  //         },\n  //       }\n  //     );\n\n  //     if (!response.ok) {\n  //       throw new Error('Request failed!');\n  //     }\n\n  //     const data = await response.json();\n\n  //     const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n  //     const createdTask = { id: generatedId, text: taskText };\n\n  //     props.onAddTask(createdTask);\n  //   } catch (err) {\n  //     setError(err.message || 'Something went wrong!');\n  //   }\n  //   setIsLoading(false);\n  // };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,qBAAqB;AAAC;AAE1C,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAA;EACzB,MAAMC,MAAM,GAAG;IACbC,GAAG,EAAE,wFAAwF;IAC7FC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,IAAI,EAAEC;IAAS,CAAC,CAAC;IACxCC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC;EACD,MAAMC,cAAc,GAAG,MAAOC,IAAI,IAAK;IACrC,MAAMC,WAAW,GAAGD,IAAI,CAACE,IAAI,CAAC,CAAC;IAC/B,MAAMC,WAAW,GAAG;MAAEC,EAAE,EAAEH,WAAW;MAAEL,IAAI,EAAEC;IAAS,CAAC;IAEvDR,KAAK,CAACgB,SAAS,CAACF,WAAW,CAAC;EAC9B,CAAC;EACD,MAAM;IAAEG,SAAS;IAAEC;EAAM,CAAC,GAAGpB,OAAO,CAACG,MAAM,EAAES,cAAc,CAAC;EAC5D;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE,QAAC,OAAO;IAAA,wBACN,QAAC,QAAQ;MAAC,WAAW,EAAES,gBAAiB;MAAC,OAAO,EAAEF;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,EAC9DC,KAAK,iBAAI;MAAA,UAAIA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAChB;AAEd,CAAC;AAAC,GAxDInB,OAAO;EAAA,QAekBD,OAAO;AAAA;AAAA,KAfhCC,OAAO;AA0Db,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}