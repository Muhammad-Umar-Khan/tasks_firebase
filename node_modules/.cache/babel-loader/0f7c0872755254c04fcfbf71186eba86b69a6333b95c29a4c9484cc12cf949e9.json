{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nconst useHttp = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const makeHttpRequest = useCallback(async (reqConfig, dataTransformationLogic) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(reqConfig.url, {\n        method: reqConfig.method ? reqConfig.method : \"GET\",\n        headers: reqConfig.headers ? reqConfig.headers : {},\n        body: reqConfig.body ? JSON.stringify(reqConfig.body) : null\n      });\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      dataTransformationLogic(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  }, []);\n  return {\n    isLoading,\n    error,\n    makeHttpRequest\n  };\n};\n_s(useHttp, \"V8m/gye/0gGEpLE0wfbi8ZzhXso=\");\nexport default useHttp;","map":{"version":3,"names":["useCallback","useState","useHttp","isLoading","setIsLoading","error","setError","makeHttpRequest","reqConfig","dataTransformationLogic","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"sources":["/home/muhammad/work/React/task_firebase/src/hooks/useHttp.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\n\nconst useHttp = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const makeHttpRequest = useCallback(async (reqConfig, dataTransformationLogic) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(reqConfig.url, {\n        method: reqConfig.method ? reqConfig.method : \"GET\",\n        headers: reqConfig.headers ? reqConfig.headers : {},\n        body: reqConfig.body ? JSON.stringify(reqConfig.body) : null,\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n      dataTransformationLogic(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  }, []);\n  return {\n    isLoading,\n    error,\n    makeHttpRequest,\n  };\n};\n\nexport default useHttp;\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,MAAMC,OAAO,GAAG,MAAM;EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGH,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMM,eAAe,GAAGP,WAAW,CAAC,OAAOQ,SAAS,EAAEC,uBAAuB,KAAK;IAChFL,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACH,SAAS,CAACI,GAAG,EAAE;QAC1CC,MAAM,EAAEL,SAAS,CAACK,MAAM,GAAGL,SAAS,CAACK,MAAM,GAAG,KAAK;QACnDC,OAAO,EAAEN,SAAS,CAACM,OAAO,GAAGN,SAAS,CAACM,OAAO,GAAG,CAAC,CAAC;QACnDC,IAAI,EAAEP,SAAS,CAACO,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACT,SAAS,CAACO,IAAI,CAAC,GAAG;MAC1D,CAAC,CAAC;MAEF,IAAI,CAACL,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,EAAE;MAClCZ,uBAAuB,CAACW,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZhB,QAAQ,CAACgB,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAnB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EACN,OAAO;IACLD,SAAS;IACTE,KAAK;IACLE;EACF,CAAC;AACH,CAAC;AAAC,GA9BIL,OAAO;AAgCb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}