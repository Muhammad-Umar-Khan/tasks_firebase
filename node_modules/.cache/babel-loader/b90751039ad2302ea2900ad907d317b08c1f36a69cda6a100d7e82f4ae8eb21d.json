{"ast":null,"code":"var _jsxFileName = \"/home/muhammad/work/React/task_firebase/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { db } from \"./firebase-config\";\nimport Tasks from \"./components/Tasks/Tasks\";\nimport NewTask from \"./components/NewTask/NewTask\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const userCollectionRef = collection(db, \"tasks\");\n  const getTasks = useCallback(async taskText => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await getDocs(userCollectionRef);\n      console.log(response);\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      const loadedTasks = [];\n      for (const taskKey in data) {\n        loadedTasks.push({\n          id: taskKey,\n          text: data[taskKey].text\n        });\n      }\n      setTasks(loadedTasks);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    getTasks();\n  }, [getTasks]);\n  const taskAddHandler = task => {\n    setTasks(prevTasks => prevTasks.concat(task));\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: getTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6/aKAE/cMEcKMvGE8bPJMVPpf08=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","db","Tasks","NewTask","collection","getDocs","App","isLoading","setIsLoading","error","setError","tasks","setTasks","userCollectionRef","getTasks","taskText","response","console","log","ok","Error","data","json","loadedTasks","taskKey","push","id","text","err","message","taskAddHandler","task","prevTasks","concat"],"sources":["/home/muhammad/work/React/task_firebase/src/App.js"],"sourcesContent":["import React, { useEffect, useState,useCallback } from \"react\";\nimport { db } from \"./firebase-config\";\n\nimport Tasks from \"./components/Tasks/Tasks\";\nimport NewTask from \"./components/NewTask/NewTask\";\nimport { collection, getDocs } from \"firebase/firestore\";\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const userCollectionRef = collection(db, \"tasks\");\n\n  const getTasks = useCallback(async (taskText) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await getDocs(userCollectionRef);\n      console.log(response);\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n\n      const loadedTasks = [];\n\n      for (const taskKey in data) {\n        loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n      }\n\n      setTasks(loadedTasks);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    getTasks();\n  }, [getTasks]);\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={getTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAACC,WAAW,QAAQ,OAAO;AAC9D,SAASC,EAAE,QAAQ,mBAAmB;AAEtC,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,OAAO,MAAM,8BAA8B;AAClD,SAASC,UAAU,EAAEC,OAAO,QAAQ,oBAAoB;AAAC;AAEzD,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMc,iBAAiB,GAAGT,UAAU,CAACH,EAAE,EAAE,OAAO,CAAC;EAEjD,MAAMa,QAAQ,GAAGd,WAAW,CAAC,MAAOe,QAAQ,IAAK;IAC/CP,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMX,OAAO,CAACQ,iBAAiB,CAAC;MACjDI,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,IAAI,CAACA,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;MAElC,MAAMC,WAAW,GAAG,EAAE;MAEtB,KAAK,MAAMC,OAAO,IAAIH,IAAI,EAAE;QAC1BE,WAAW,CAACE,IAAI,CAAC;UAAEC,EAAE,EAAEF,OAAO;UAAEG,IAAI,EAAEN,IAAI,CAACG,OAAO,CAAC,CAACG;QAAK,CAAC,CAAC;MAC7D;MAEAf,QAAQ,CAACW,WAAW,CAAC;IACvB,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZlB,QAAQ,CAACkB,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACArB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAENV,SAAS,CAAC,MAAM;IACdgB,QAAQ,EAAE;EACZ,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMgB,cAAc,GAAIC,IAAI,IAAK;IAC/BnB,QAAQ,CAAEoB,SAAS,IAAKA,SAAS,CAACC,MAAM,CAACF,IAAI,CAAC,CAAC;EACjD,CAAC;EAED,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACb,QAAC,OAAO;MAAC,SAAS,EAAED;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG,eACtC,QAAC,KAAK;MACJ,KAAK,EAAEnB,KAAM;MACb,OAAO,EAAEJ,SAAU;MACnB,KAAK,EAAEE,KAAM;MACb,OAAO,EAAEK;IAAS;MAAA;MAAA;MAAA;IAAA,QAClB;EAAA;IAAA;IAAA;IAAA;EAAA,QACa;AAErB;AAAC,GAlDQR,GAAG;AAAA,KAAHA,GAAG;AAoDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}